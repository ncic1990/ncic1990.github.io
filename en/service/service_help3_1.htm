<!-- saved from url=(0022)http://internet.e-mail -->
<html>
<head>
<title>高性能计算服务</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link rel="stylesheet" href="../css/ncic.css" type="text/css">
<script language="JavaScript">
<!--
function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}
//-->
</script>
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" onLoad="MM_preloadImages('../images/arrow_02.gif')">
<table width="100%" border="0" cellspacing="0" cellpadding="0">
  <tr> 
    <td width="547"><img src="../image/top.jpg" width="547" height="123"></td>
    <td background="../image/top_1.jpg" align="right"><img src="../image/top_2.jpg" width="131" height="123"></td>
  </tr>
</table>
<table width="720" border="0" cellspacing="0" cellpadding="0">
  <tr> 
    <td width="163" align="center" valign="top"> 
      <table width="163" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td><a href="../about/about.htm"><img src="../image/niu1.jpg" width="163" height="26" border="0"></a></td>
        </tr>
      </table>
      <table width="163" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td><a href="../product/product.htm"><img src="../image/niu2.jpg" width="163" height="23" border="0"></a></td>
        </tr>
      </table>
      <table width="163" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td><a href="../road/road.htm"><img src="../image/niu3.jpg" width="163" height="23" border="0"></a></td>
        </tr>
        <tr> 
          <td><a href="../paper/paper.htm"><img src="../image/niu4.jpg" width="163" height="23" border="0"></a></td>
        </tr>
        <tr> 
          <td><a href="../now/now.htm"><img src="../image/niu5.jpg" width="163" height="24" border="0"></a></td>
        </tr>
        <tr> 
          <td><a href="../news/news.htm"><img src="../image/niu6.jpg" width="163" height="26" border="0"></a></td>
        </tr>
        <tr> 
          <td><a href="../link/link.htm"><img src="../image/niu7.jpg" width="163" height="23" border="0"></a></td>
        </tr>
        <tr> 
          <td><a href="service.htm"><img src="../image/niu8.jpg" width="163" height="24" border="0"></a></td>
        </tr>
      </table>
      <br>
      <a href="../index_e.htm"><img src="../image2/back.gif" width="80" height="17" align="right" border="0"></a><br>
      <br>
      <br>
      <br>
    </td>
    <td width="30">&nbsp;</td>
    <td valign="top" align="right"> 
      <table width="480" border="0" cellspacing="0" cellpadding="0" >
        <tr> 
          <td align="right" valign="bottom"><img src="../image2/top2.gif" width="476" height="97"></td>
        </tr>
        <tr> 
          <td align="right" height="5"><img src="../image/line.gif" width="481" height="3"></td>
        </tr>
      </table>
      <table width="100%" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td height="10"><img src="../images/spacer.gif" width="1" height="1"></td>
        </tr>
      </table>
      <table width="480" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td width="11"><img src="../images/service_bar_start.gif" width="11" height="22"></td>
          <td class="padding01" align="center" background="../images/service_bar_bg.gif"> 
            在线帮助 </td>
          <td width="7" align="right" background="../images/service_bar_bg.gif"><img src="../images/service_bar_splite.gif" width="7" height="22"></td>
          <td background="../images/service_bar_bg01.gif" align="right"> 
            <table width="100%" border="0" cellspacing="0" cellpadding="0">
              <tr> 
                <td align="center" width="20"><img src="../images/arrow_03.gif" width="8" height="20" border="0" name="ansys"></td>
                <td class="padding01" width="50"><a href="service_help.htm" class="link05" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('ansys','','../images/arrow_02.gif',1)">上机入门</a></td>
                <td width="20" align="center"><img src="../images/arrow_03.gif" width="8" height="20" border="0" name="star"></td>
                <td class="padding01" width="50"><a href="service_help1.htm" class="link05" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('star','','../images/arrow_02.gif',1)">编译环境</a></td>
                <td align="center" width="20"><img src="../images/arrow_03.gif" width="8" height="20" border="0" name="dyna"></td>
                <td class="padding01" width="60"><a href="service_help2.htm" class="link05" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('dyna','','../images/arrow_02.gif',1)">PVM的使用</a> 
                </td>
                <td width="20" align="center"><img src="../images/arrow_03.gif" width="8" height="20" border="0" name="gauss"></td>
                <td class="padding01" width="60"><a href="service_help3.htm" class="link05" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('gauss','','../images/arrow_02.gif',1)">MPI的使用</a></td>
                <td align="center" width="20"><img src="../images/arrow_03.gif" width="8" height="20" name="link"></td>
                <td class="padding01" width="60"><a href="service_help4.htm" class="link05" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('link','','../images/arrow_02.gif',1)">ESSL的使用</a></td>
                <td class="padding01" align="center">&nbsp;</td>
              </tr>
            </table>
          </td>
          <td width="10"><img src="../images/service_bar_end.gif" width="10" height="22"></td>
        </tr>
      </table>
      <table width="100%" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td height="5"><img src="../images/spacer.gif" width="1" height="1"></td>
        </tr>
      </table>
      <table width="480" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td width="11"><img src="../images/service_cor01.gif" width="11" height="6"></td>
          <td background="../images/service_tbg.gif"><img src="../images/service_tbg.gif" width="7" height="6"></td>
          <td width="10"><img src="../images/service_cor02.gif" width="10" height="6"></td>
        </tr>
      </table>
      <table width="480" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td bgcolor="#74558D" width="1"><img src="../images/spacer.gif" width="1" height="1"></td>
          <td> 
            <table width="100%" border="0" cellspacing="0" cellpadding="8">
              <tr> 
                <td> 
                  <p align="center"><font size="4"><b>MPI的使用</b></font></p>
                  <table width="100%" border="0" cellspacing="0" cellpadding="0">
                    <tr> 
                      <td width="11"><img src="../images/gray_cor01.gif" width="11" height="6"></td>
                      <td background="../images/gray_tbg.gif"><img src="../images/gray_tbg.gif" width="1" height="6"></td>
                      <td width="10"><img src="../images/gray_cor02.gif" width="10" height="6"></td>
                    </tr>
                  </table>
                  <table width="100%" border="0" cellspacing="0" cellpadding="0" bgcolor="#f6f6f6">
                    <tr> 
                      <td bgcolor="#74558D" width="1"><img src="../images/spacer.gif" width="1" height="1"></td>
                      <td> 
                        <table width="100%" border="0" cellspacing="0" cellpadding="8">
                          <tr> 
                            <td bgcolor="#FFFFFF"> 
                              <p align="left"><b><font size="3">环境设置</font></b></p>
                              <p> <b>一.1000A</b></p>
                              <p><b>环境变量的设置</b></p>
                              <p>　　在曙光天潮 1000A并行系统中,MPICH 安装于 ‘/usr/local/mpich’, 
                                因此应设置相应的环境变量。若使用csh ，则在 $HOME/.cshrc 文件中加入以下内容:</p>
                              <p>　　set path=( $path /usr/local/mpich/bin )<br>
                                　　setenv MANPATH ${MANPATH}: /usr/ local/mpich/man 
                              </p>
                              <p>　　类似地，若使用ksh 或 bsh，则应在 $HOME/.profile文件中加入相应内容。</p>
                              <p>[注]: 通常系统管理员已为你设置好环境。</p>
                              <p><b>Architecture和Device</b></p>
                              <p>　　Architecture (简记为ARCH) 是指MPICH所用的机器类型；而device(简记为DEV) 
                                是指MPICH采用何种方式实现处理机之间的通信。对应于每个ARCH/DEV对的MPI库和命令置于子目录 
                                ‘/usr/local/mpich/lib/&lt;ARCH&gt;/&lt;DEV&gt;’中, 
                                对于 1000A来说, 即是 ‘/usr/local/mpich/lib/rs6000/ch_p4,这一路径一般也应置于用户的 
                                $HOME/.cshrc文件中, 否则有些命令将用全路径名称。</p>
                              <p><b>二.2000-I及3000</b></p>
                              <p>　　在曙光3000系统中，MPI省缺地安装于&quot;/cluster/mpi&quot;下，因此应设置相应的环境变量。若使用csh，则在$HOME/.cshrc文件中加入相关内容；类似地，若使用ksh或bsh，则应在$HOME/.profile文件中加入相应内容。模板文件在&quot;/cluster/userenv/CSHRC, 
                                PROFILE&quot;。</p>
                              <p>[注]：往往系统管理员已为你设置好环境。若在系统设置为MESH版的同时，运行网络版MPI程序，只需按网络版要求设置环境变量MPI_ROOT即可。另外，还需系统管理员开放所需节点用户的rsh权限。</p>
                              <p>　　为使用方便起见，我们建议用户作如下的设置：</p>
                              <p>（1）设置环境变量</p>
                              <p>csh类：<br>
                                　　setenv MPI_INSTALL_DIR /cluster/mpi<br>
                                　　#according to the network setting to select 
                                MPI protocol<br>
                                　　if ( -f /cluster/config/sys.conf ) then<br>
                                　　@ net={ grep NET /cluster/config/sys.conf }<br>
                                　　if ($net) then<br>
                                　　setenv MPI_ROOT $MPI_INSTALL_DIR/net<br>
                                　　else<br>
                                　　@ mesh={ grep MESH /cluster/config/sys.conf 
                                }<br>
                                　　if ($mesh) then<br>
                                　　setenv MPI_MODE 1<br>
                                　　setenv MPI_ROOT $MPI_INSTALL_DIR/mesh<br>
                                　　endif<br>
                                　　endif<br>
                                　　else<br>
                                　　echo &quot;/cluster/config/sys.conf is not found&quot;<br>
                                　　endif</p>
                              <p><br>
                                ksh类：<br>
                                　　MPI_INSTALL_DIR=/cluster/mpi<br>
                                　　export MPI_INSTALL_DIR<br>
                                　　#according to the network setting to select 
                                MPI protocal<br>
                                　　if [ -f /cluster/config/sys.conf ]<br>
                                　　then<br>
                                　　if cat /cluster/config/sys.conf | grep NET<br>
                                　　then<br>
                                　　export MPI_ROOT=$MPI_INSTALL_DIR/net<br>
                                　　else<br>
                                　　if cat /cluster/config/sys.conf | grep MESH<br>
                                　　then<br>
                                　　export MPI_MODE=1<br>
                                　　export MPI_ROOT=$MPI_INSTALL_DIR/mesh<br>
                                　　fi<br>
                                　　fi<br>
                                　　else<br>
                                　　echo &quot;/cluster/config/sys.conf is not found&quot;<br>
                                　　fi</p>
                              <p>（2）增加路径</p>
                              <p>　　MPI系统本身提供了一些命令，例如简化的编译命令mpicc和mpif77，命令行执行命令mpirun等。建议用户将以下路径加入自己的命令路径中。<br>
                                　　set path=( $path $MPI_ROOT/bin ) 或<br>
                                　　export PATH=$PATH:$MPI_ROOT/bin<br>
                                　　<br>
                                　　用户可以随时使用man命令获取MPI各函数的帮助信息，需加入如下的帮助信息路径。<br>
                                　　setenv MANPATH $MANPATH: $MPI_ROOT/man 或<br>
                                　　export MANPATH=$MANPATH:$MPI_ROOT/man</p>
                              <p>[注]上述路径和环境变量在用户模板启动文件CSHRC和PROFILE中均已设置，用户可以检查系统缺省配置的.cshrc或.profile文件。不要改动.rhosts和.login文件。 
                                <br>
                              </p>
                            </td>
                          </tr>
                          <tr> 
                            <td height="5">&nbsp;</td>
                          </tr>
                          <tr> 
                            <td bgcolor="#FFFFFF"> 
                              <p><b><font size="3">INCLUDE文件</font></b></p>
                              <p> <b>一.1000A </b></p>
                              <p>C语言应用程序开头应有：</p>
                              <p>　　#include “ mpi.h”<br>
                                　　若使用cc 编译,命令行应有: - I/usr/local/mpich/include</p>
                              <p>Fortran语言应用程序开头应有：</p>
                              <p>　　include ’mpif.h’<br>
                                　　若使用Fortran 编译, 命令行应有: -I/usr/local/mpich/include</p>
                              <p><b>二.2000-I及3000</b></p>
                              <p>在C语言应用程序中添加：<br>
                                　　#include &quot;mpi.h&quot;<br>
                                　　编译的时候，建立头文件路径为：<br>
                                　　net版：-I/cluster/mpi/net/include<br>
                                　　mesh版：-I/cluster/bcl/include -I/cluster/rms/include 
                                -I/cluster/sdr/include -I/cluster/mpi/mesh/include</p>
                              <p>在Fortran语言应用程序添加：<br>
                                　　include 'mpif.h'<br>
                                　　编译的时候，建立头文件路径为：<br>
                                　　net版：-I/cluster/mpi/net/include<br>
                                　　mesh版：-I/cluster/bcl/include -I/cluster/rms/include 
                                -I/cluster/sdr/include -I/cluster/mpi/mesh/include</p>
                            </td>
                          </tr>
                          <tr> 
                            <td height="5">&nbsp;</td>
                          </tr>
                          <tr> 
                            <td bgcolor="#FFFFFF"> 
                              <p><b><font size="3">MPI库文件</font></b></p>
                              <p> <b>一.1000A</b></p>
                              <p>C语言：</p>
                              <p>　　使用C编译器时需作下述链接:<br>
                                　　-L/usr/local/mpich/lib/rs6000/ch_p4 -lmpi -lbsd</p>
                              <p>　　数学函数库还应链接: -lm</p>
                              <p>Fortran语言：</p>
                              <p>　　使用Fortran编译器时应作下述链接:<br>
                                　　- L/usr/local/mpich/lib/rs6000/ch_p4 -lmpi -lbsd</p>
                              <p></p>
                              <p><b> 二.2000-I及3000</b></p>
                              <p>C语言：</p>
                              <p>　　使用C编译器时需作下述链接：<br>
                                　　-L/cluster/mpi/net/lib -lmpi -lbsd (net版)<br>
                                　　-L/cluster/mpi/mesh/lib -L/cluster/bcl/lib -L/cluster/rms/lib 
                                -L/cluster/sdr/lib -lmpi -lbcl -lrms -lsdr (mesh版)</p>
                              <p>　　数学函数库还应链接：-lm</p>
                              <p>Fortran语言：</p>
                              <p>　　使用Fortran编译器时应作下述链接：<br>
                                　　-L/cluster/mpi/net/lib -lmpi -lbsd (net版)<br>
                                　　-L/cluster/mpi/mesh/lib -L/cluster/bcl/lib -L/cluster/rms/lib 
                                -L/cluster/sdr/lib -lmpi -lbcl -lrms -lsdr (mesh版)</p>
                              <p>　　MPI提供了两个工具(mpif77和mpicc)来简化MPI应用程序的编译，在曙光3000系统上, 
                                若编译器仅安装在login节点上，编译过程应在login节点进行。<br>
                              </p>
                            </td>
                          </tr>
                          <tr> 
                            <td height="5">&nbsp;</td>
                          </tr>
                          <tr> 
                            <td bgcolor="#FFFFFF"> 
                              <p><b><font size="3">编译MPI程序</font></b></p>
                              <p> 一<b>.1000A </b></p>
                              <p>　　MPICH提供了两个工具来简化MPI应用程序的编译, 在曙光1000A并行系统上,编译过程应在主控节点进行。</p>
                              <p><b>make</b></p>
                              <p>　　MPICH应用程序常常需要链接特殊的库和编译选项, 这时用户就要使用Makefile。为方便用户, 
                                MPICH提供了一个 make 文件的模板 ,同时也提供了命令‘mpireconfig’,以按所用并行机特点将这一模板转换为用户可用的‘Makefile’。这一模板即为 
                                ‘/usr/local/mpich/examples/Makefile.in’ 文件。</p>
                              <p>　　用户将其转换为自己可用的‘Makefile’文件的过程如下:</p>
                              <p>　　1.用户 login 入主控节点 (如carrot), 并转入适当子目录下, 如包括MPI应用程序test.f 
                                的子目录下。<br>
                                　　2.将文件拷入子目录　% cp /usr/local/mpich/examples/Makefile.in 
                                下。<br>
                                　　3. 由 ‘Makefile.in’ 产生 ‘Makefile’ 文件：% mpireconfig 
                                Makefile。<br>
                                　　4. 按需要修改Makefile。</p>
                              <p>　　上述过程产生的 Makefile 中包含一个Fortram程序 (pi3.f) 和两个C语言程序 
                                (cpi.c和cpilog.c) 的编译命令, 按需要加入或修改所需要的内容, 如按 pi3.f 
                                的编译命令加入test.f 编译所需内容或将 pi3 改为 test, 以备编译 test.f 
                                之需。xlc 与 xlf 的编译选项也应按需要修改。</p>
                              <p>　　编译有关程序只需使用下述命令:<br>
                                　　　　% make</p>
                              <p>　　则 ‘Makefile’ 中所有列入的程序均被编译, 若只编译 test.f, 则需键入命令：<br>
                                　　　　% make test</p>
                              <p>　　这时只编译test.f并生成目标test。</p>
                              <p><b>mpif77和 mpicc</b></p>
                              <p>　　MPICH提供了两个命令 (mpif77和mpicc) 来编译和链接Fortran或C语言程序, 
                                用户可使用此二命令编译MPI应用程序, 特别是当程序只包含少量文件时。mpif77 (mpicc) 
                                与一般Fortran (或C) 编译命令使用方式类似, 可加入同样的选项，如:</p>
                              <p>　　　　mpif77 -c foo.f<br>
                                　　　　mpicc -c foo.c　与<br>
                                　　　　mpif77 -o foo foo.o<br>
                                　　　　mpicc -o foo foo.o</p>
                              <p>　　有时链接时需一些特殊库,应在链接时注明。</p>
                              <p><b>二.2000-I及3000</b></p>
                              <p><b>make</b></p>
                              <p>　　MPI应用程序常常需要链接特殊的库和编译选项, 这时用户就要使用&quot;makefile&quot;。按需要修改makefile，主要是编译器路径的设置。编译有关程序只需使用下述命令：<br>
                                　　　　% make<br>
                                　　则 'makefile' 中所有列入的程序均被编译，若只编译test.f，则需键入命令<br>
                                　　　　% make test<br>
                                　　这时只编译test.f并生成目标文件test。</p>
                              <p>　　用户可以用以下的Makefile文件模板作C程序的编译：<br>
                                　　# Makefile for compiling MPI programs on Dawning-3000 
                                system.<br>
                                　　#<br>
                                　　# This makefile is used to compile and link 
                                with MPI programs for BCL-1e <br>
                                　　# communication library and RMS resource management 
                                system written in C.<br>
                                　　# <br>
                                　　CC = /usr/bin/cc</p>
                              <p>　　CLINKER = /usr/bin/cc<br>
                                　　OPTFLAGS = <br>
                                　　LIBS = -L$(MPI_ROOT)/lib -L/cluster/bcl/lib 
                                -L/cluster/rms/lib -L/cluster/sdr/lib -lmpi -lbcl 
                                -lrms -lsdr<br>
                                　　INCLUDES = -I/cluster/bcl/include -I/cluster/rms/inc 
                                -I$(MPI_ROOT)/include<br>
                                　　default: hello-world<br>
                                　　hello-world: hello-world.o <br>
                                　　$(CLINKER) $(OPTFLAGS) ${INCLUDES} -o hello-world 
                                hello-world.o ${LIBS}<br>
                                　　/bin/rm -f *.o *~<br>
                                　　clean:<br>
                                　　/bin/rm -f *.o *~ $(default)<br>
                                　　.c.o:<br>
                                　　$(CC) $(CFLAGS) ${INCLUDES} -c $*.c</p>
                              <p>　　Fortran程序的Makefile文件模板如下：<br>
                                　　# Makefile for compiling MPI programs on Dawning-3000 
                                system.<br>
                                　　#<br>
                                　　# This makefile is used to compile and link 
                                with MPI programs for BCL-1e<br>
                                　　# communication library and RMS resource management 
                                system written in Fortran.<br>
                                　　# <br>
                                　　F77 = /usr/bin/f77<br>
                                　　CLINKER = /usr/bin/f77<br>
                                　　OPTFLAGS =<br>
                                　　LIBS = -L$(MPI_ROOT)/lib -L/cluster/bcl/lib 
                                -L/cluster/rms/lib -L/cluster/sdr/lib -lmpi -lbcl 
                                -lrms -lsdr<br>
                                　　INCLUDES = -I/cluster/bcl/include -I/cluster/rms/inc 
                                -I$(MPI_ROOT)/include<br>
                                　　default: hello-world<br>
                                　　hello-world: hello-world.o <br>
                                　　$(CLINKER) $(OPTFLAGS) ${INCLUDES} -o hello-world 
                                hello-world.o ${LIBS}<br>
                                　　/bin/rm -f *.o *~<br>
                                　　clean:<br>
                                　　/bin/rm -f *.o *~ $(default)<br>
                                　　.f.o:<br>
                                　　$(F77) $(CFLAGS) ${INCLUDES} -c $*.f</p>
                              <p><b>mpif77和mpicc</b></p>
                              <p>　　如果用户设置了正确的MPI系统命令的执行路径，就可以直接地使用命令行方式mpicc或mpif77来编译C或Fortran程序，编译方式与cc和f77完全一致。</p>
                              <p>　　MPI提供了两个命令 (mpif77和mpicc) 来简化编译和链接MPI Fortran或C语言程序的过程，用户可使用此二命令编译MPI应用程序，特别是当程序只包含少量文件时。mpif77 
                                (mpicc) 与一般Fortran (或C) 编译命令使用方式类似, 可加入同样的选项（详细选项可见有关编译器选项的说明），如：<br>
                                　　　　mpif77 -c foo.f<br>
                                　　　　mpicc -c foo.c<br>
                                　　　　mpif77 -o foo foo.o<br>
                                　　　　mpicc -o foo foo.o</p>
                              <p>　　有时链接时需一些特殊库, 应在链接时注明。使用mpicc和mpif77省略了有关MPI的路径设置。<br>
                              </p>
                            </td>
                          </tr>
                          <tr> 
                            <td height="5">&nbsp;</td>
                          </tr>
                          <tr> 
                            <td bgcolor="#FFFFFF"> 
                              <p><font size="3"><b>运行MPI程序</b></font></p>
                              <p> <b>一.1000A </b></p>
                              <p>　　在曙光天潮1000A系统上, 所有MPI应用程序均应在计算节点 (即node1 - node 
                                8或hnode1 - hnode8) 运行, 因此在应用程序编译好后, 用户应登录到适当节点, 
                                运行应用程序。</p>
                              <p>　　MPICH提供了如下方式来运行MPI程序, 现分述如下.</p>
                              <p><b>1.mpirun 命令</b></p>
                              <p>　　命令mpirun -help会给出全部可用的选项, 适当地使用这些选项能更好地运行应用程序, 
                                并改善系统运行状况。</p>
                              <p>　　mpirun的基本格式为:</p>
                              <p>　　　　mpirun [mpirun-options…] &lt;progname&gt; 
                                [options…]</p>
                              <p>　　其中 [mpirun-options…], 主要选项如下：</p>
                              <p>　　　　-np &lt;np&gt; 　　　　　要加载的进程个数。</p>
                              <p>　　　　-p4pg &lt;pgfile&gt;　　按照pgfile文件中的要求加载用户进程。pgfile文件描述用户在那些结点上加载什么样的用户进程。该文件的格式为：</p>
                              <p>　　第一行：&lt;结点名&gt; &lt;0&gt; &lt;用户要加载的进程--允许使用绝对路径&gt;<br>
                                　　第二行：&lt;结点名&gt; &lt;1&gt; &lt;用户要加载的进程--允许使用绝对路径&gt;<br>
                                　　　　　　　　　　　　　　......<br>
                                　　第n行：&lt;结点名&gt; &lt;1&gt; &lt;用户要加载的进程--允许使用绝对路径&gt;</p>
                              <p>　　其中n为用户要加载进程的个数。结点名可以相同，也可以不同。且用户使用此选项后, -np选项无效。</p>
                              <p>　　最简单的运行一个MPI应用程序的例子是：</p>
                              <p>　　　　% mpirun -np 4 a.out，它将在并行机上加载４个用户执行程序 －－a.out。</p>
                              <p>　　一般情况下最好用-p4pg选项，pgfile文件包含有关进程在哪些节点上运行的信息。如你已登录到节点node1, 
                                并用4个节点执行你的并行程序 a. out, 执行文件的全路径是：/public/user1/example/a.out, 
                                则pgfile内容如下:</p>
                              <p>　　node1 0 /public/user1/example/a.out<br>
                                　　node2 1 /public/user1/example/a.out<br>
                                　　node3 1 /public/user1/example/a.out<br>
                                　　node4 1 /public/user1/example/a.out</p>
                              <p>　　这时的执行命令为:</p>
                              <p>　　　　% mpirun -p4pg pgfile a.out</p>
                              <p>　　你也可以在一个节点（如node1）上模拟多进程并行程序的执行, 这时pgfile的一个例子是:</p>
                              <p>　　node1 0 /public/user1/example/a.out<br>
                                　　node1 1 /public/user1/example/a.out<br>
                                　　node1 1 /public/user1/example/a.out<br>
                                　　node1 1 /public/user1/example/a.out</p>
                              <p><b>2.程序的直接执行</b></p>
                              <p>　　用户也可以不用mpirun, 而直接运行目标程序(a.out),但此时需用pgfile,其命令格式如下:</p>
                              <p>　　　　% a.out -p4pg pgfile</p>
                              <p><b>3.使用计算网</b></p>
                              <p>　　使用计算网的优点是通信速度快, 程序运行性能得到改善。建议用户使用计算网来运行MPI应用程序，这时只需将pgfile中第一列的nodei 
                                (其中1≤i≤8) 改为hnodei。则pgfile内容将改为:</p>
                              <p>　　hnode1 0 /public/user1/example/a.out<br>
                                　　hnode2 1 /public/user1/example/a.out<br>
                                　　hnode3 1 /public/user1/example/a.out<br>
                                　　hnode4 1 /public/user1/example/a.out <br>
                                　　则，用户进程a.out的加载命令为：</p>
                              <p>　　　　%mpirun -p4pg pgfile a.out</p>
                              <p>　　或者，</p>
                              <p>　　　　%a.out -p4pg pgfile</p>
                              <p> <b>二.2000-I及3000</b></p>
                              <p>　　在曙光3000系统上，所有MPI应用程序均应在计算节点运行，因此在应用程序编译好后，使用mpirun命令运行MPI应用程序。mpirun命令完整的格式如下：<br>
                                　　mpirun [-h|-?|-help] [-sz size|-sz hXw] [-np 
                                nprocs] [-pl poolname] &lt;progname [argument]&gt;</p>
                              <p>　　各个选项的值由用户从命令行中显示地指定，选项的含义如下：<br>
                                　　-h<br>
                                　　-?<br>
                                　　-help：显示帮助信息。</p>
                              <p>　　-sz &lt;size| hXw&gt;<br>
                                　　指定物理节点的数目有两种指定形式。一是直接指定size值，另一种是指定物理节点的矩形域的长和宽。size值和h*w的值如果超过所在pool的节点数，sz项的值取pool的节点数，h*w值取整个pool。两者的缺省值分别为所在pool的节点数和整个pool。</p>
                              <p>　　-np &lt;nprocs&gt;<br>
                                　　用户期望运行的进程数。进程数与实际申请的物理节点数没有任何联系，因为允许一个节点上运行同一个应用的多个进程。如果未指定，取实际sz项的值。</p>
                              <p>　　-pl &lt;poolname&gt;<br>
                                　　应用程序执行的pool。应用程序的每次执行能且只能在一个pool中执行。缺省值为系统为用户设置的缺省的pool名（每个用户在创建时已自行指定或系统分配了一个缺省的pool）。 
                              </p>
                              <p>　　在运行选项后，是用户的程序名。该可执行文件必须在所指定的或缺省的pool中的所有节点上能找到，并且与启动节点上的路径一致。用户程序名后的一切字符串都视为其参数（不包括被shell解释的重定向等，对shell解释的一些特殊字符，如需作为参数，应作相应的转换）。因此运行选项与用户程序名有先后的顺序，先运行选项，后用户程序名和参数。</p>
                              <p>　　执行mpirun命令的一些简洁方式举例如下：</p>
                              <p>　　　　mpirun [-np nprocs][-pl poolname] &lt;progname 
                                [argument]&gt;<br>
                                　　未显示指出物理节点数，缺省值是整个pool的节点数。表明该应用程序在整个pool的所有节点上运行。如果nprocs 
                                &gt; pool的节点总数，每个节点上至少有一个进程；否则仅在该pool中nprocs个节点上执行，每个节点上运行一个进程。</p>
                              <p>　　　　mpirun [-pl poolname] &lt;progname [argument]&gt;<br>
                                　　未显示指出物理节点数和进程数，两者的缺省值是pool的节点总数。</p>
                              <p>　　　　mpirun [-np nprocs] &lt;progname [argument]&gt;<br>
                                　　未显示指出物理节点数和pool名，该程序在缺省的pool的所有节点上运行。</p>
                              <p>　　　　mpirun [-pl poolname] &lt;progname [argument]&gt;<br>
                                　　未显示指出物理节点数和进程数，该程序在pool内所有节点上运行，每个节点上一个进程。</p>
                              <p>　　　　mpirun &lt;progname [argument]&gt;<br>
                                　　在缺省的pool内的所有节点上运行该程序，每个节点上一个进程。</p>
                              <p>　　用户调式MPI程序时，可以启动DCDB(Dawning Cluster DeBugger)，在该环境下进行程序的调试。曙光3000安装有MPI版1.1版本（MPI_ch_p4），使用方法与曙光1000A上或任何网络环境上MPI的使用方法相同。MPI_ch_p4（MPI网络版）的系统路径在/cluster/mpi/net，在设置环境变量时要注意，具体运行方法参见曙光1000A。<br>
                              </p>
                            </td>
                          </tr>
                        </table>
                      </td>
                      <td bgcolor="#74558D" width="1"><img src="../images/spacer.gif" width="1" height="1"></td>
                    </tr>
                  </table>
                  <table width="100%" border="0" cellspacing="0" cellpadding="0">
                    <tr> 
                      <td width="11"><img src="../images/gray_cor03.gif" width="11" height="6"></td>
                      <td background="../images/gray_bbg.gif"><img src="../images/gray_bbg.gif" width="4" height="6"></td>
                      <td width="10"><img src="../images/gray_cor04.gif" width="10" height="6"></td>
                    </tr>
                  </table>
                </td>
              </tr>
            </table>
          </td>
          <td bgcolor="#74558D" width="1"><img src="../images/spacer.gif" width="1" height="1"></td>
        </tr>
      </table>
      <table width="480" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td width="11"><img src="../images/service_cor03.gif" width="11" height="6"></td>
          <td background="../images/service_bbg.gif"><img src="../images/service_bbg.gif" width="7" height="6"></td>
          <td width="10"><img src="../images/service_cor04.gif" width="10" height="6"></td>
        </tr>
      </table>
    </td>
  </tr>
  <tr>
    <td width="163" align="center" valign="top">&nbsp;</td>
    <td width="30">&nbsp;</td>
    <td valign="top" align="right"> 
      <table width="100%" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td height="5"><img src="../images/spacer.gif" width="1" height="1"></td>
        </tr>
      </table>
      <table width="480" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td width="11"><img src="../images/service_bar_start.gif" width="11" height="22"></td>
          <td background="../images/service_bar_bg01.gif" width="100" class="padding01">&nbsp;</td>
          <td width="7" background="../images/service_bar_bg01.gif">&nbsp;</td>
          <td background="../images/service_bar_bg01.gif" align="right"> 
            <table width="100%" border="0" cellspacing="0" cellpadding="0">
              <tr> 
                <td align="center">&nbsp;</td>
                <td width="20" align="center">&nbsp;</td>
                <td class="padding01" width="70">&nbsp;</td>
                <td width="20" align="center">&nbsp;</td>
                <td class="padding01" width="70">&nbsp;</td>
                <td width="20" align="center"><img src="../images/service_bar_previous.gif" width="13" height="22"></td>
                <td class="padding01" width="70"><a href="service_help3.htm" class="link05">上一页</a></td>
              </tr>
            </table>
          </td>
          <td width="10"><img src="../images/service_bar_end.gif" width="10" height="22"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<br>
<table width="100%" border="0" cellspacing="0" cellpadding="0">
  <tr> 
    <td bgcolor="#999999" height="1"><img src="../image/dot00.gif" width="1" height="1"></td>
  </tr>
  <tr> 
    <td align="center"> 
      <font face="Verdana, Arial, Helvetica, sans-serif" size="1">Copyright 
        for NCIC All Rights Reserved</font> <br>
        本网站版权归国家智能计算机研究开发中心所有<br>
      
    </td>
  </tr>
</table>
</body>
</html>
