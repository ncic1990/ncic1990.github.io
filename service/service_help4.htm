<html>
<head>
<title>高性能计算服务</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link rel="stylesheet" href="../css/ncic.css" type="text/css">
<script language="JavaScript">
<!--
function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}
//-->
</script>
</head>

<body bgcolor="#FFFFFF" text="#000000" leftmargin="0" topmargin="0" onLoad="MM_preloadImages('../images/arrow_02.gif')">
<table width="100%" border="0" cellspacing="0" cellpadding="0">
  <tr> 
    <td width="547"><img src="../image/top.jpg" width="547" height="123"></td>
    <td background="../image/top_1.jpg" align="right"><img src="../image/top_2.jpg" width="131" height="123"></td>
  </tr>
</table>
<table width="720" border="0" cellspacing="0" cellpadding="0">
  <tr> 
    <td width="163" align="center" valign="top"> 
      <table width="163" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td><a href="../about/about.htm"><img src="../image/niu1.jpg" width="163" height="26" border="0"></a></td>
        </tr>
      </table>
      <table width="163" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td><a href="../product/product.htm"><img src="../image/niu2.jpg" width="163" height="23" border="0"></a></td>
        </tr>
      </table>
      <table width="163" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td><a href="../road/road.htm"><img src="../image/niu3.jpg" width="163" height="23" border="0"></a></td>
        </tr>
        <tr> 
          <td><a href="../paper/paper.htm"><img src="../image/niu4.jpg" width="163" height="23" border="0"></a></td>
        </tr>
        <tr> 
          <td><a href="../now/now.htm"><img src="../image/niu5.jpg" width="163" height="24" border="0"></a></td>
        </tr>
        <tr> 
          <td><a href="../news/news.htm"><img src="../image/niu6.gif" width="163" height="23" border="0"></a></td>
        </tr>
        <tr> 
          <td><a href="../link/link.htm"><img src="../image/niu7.jpg" width="163" height="23" border="0"></a></td>
        </tr>
        <tr> 
          <td><a href="service.htm"><img src="../image/niu8.jpg" width="163" height="24" border="0"></a></td>
        </tr>
      </table>
      <br>
      <a href="../index.htm"><img src="../image2/back.gif" width="80" height="17" align="right" border="0"></a><br>
      <br>
      <br>
      <br>
    </td>
    <td width="30">&nbsp;</td>
    <td valign="top" align="right"> 
      <table width="480" border="0" cellspacing="0" cellpadding="0" >
        <tr> 
          <td align="right" valign="bottom"><img src="../image2/top2.gif" width="476" height="97"></td>
        </tr>
        <tr> 
          <td align="right" height="5"><img src="../image/line.gif" width="481" height="3"></td>
        </tr>
      </table>
      <table width="100%" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td height="10"><img src="../images/spacer.gif" width="1" height="1"></td>
        </tr>
      </table>
      <table width="480" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td width="11"><img src="../images/service_bar_start.gif" width="11" height="22"></td>
          <td class="padding01" align="center" background="../images/service_bar_bg.gif"> 
            在线帮助 </td>
          <td width="7" align="right" background="../images/service_bar_bg.gif"><img src="../images/service_bar_splite.gif" width="7" height="22"></td>
          <td background="../images/service_bar_bg01.gif" align="right"> 
            <table width="100%" border="0" cellspacing="0" cellpadding="0">
              <tr> 
                <td align="center" width="20"><img src="../images/arrow_03.gif" width="8" height="20" border="0" name="ansys"></td>
                <td class="padding01" width="50"><a href="service_help.htm" class="link05" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('ansys','','../images/arrow_02.gif',1)">上机入门</a></td>
                <td width="20" align="center"><img src="../images/arrow_03.gif" width="8" height="20" border="0" name="star"></td>
                <td class="padding01" width="50"><a href="service_help1.htm" class="link05" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('star','','../images/arrow_02.gif',1)">编译环境</a></td>
                <td align="center" width="20"><img src="../images/arrow_03.gif" width="8" height="20" border="0" name="dyna"></td>
                <td class="padding01" width="60"><a href="service_help2.htm" class="link05" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('dyna','','../images/arrow_02.gif',1)">PVM的使用</a> 
                </td>
                <td width="20" align="center"><img src="../images/arrow_03.gif" width="8" height="20" border="0" name="gauss"></td>
                <td class="padding01" width="60"><a href="service_help3.htm" class="link05" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('gauss','','../images/arrow_02.gif',1)">MPI的使用</a></td>
                <td align="center" width="20"><img src="../images/arrow_03.gif" width="8" height="20" name="link"></td>
                <td class="padding01" width="60"><a href="service_help4.htm" class="link05" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('link','','../images/arrow_02.gif',1)">ESSL的使用</a></td>
                <td class="padding01" align="center">&nbsp;</td>
              </tr>
            </table>
          </td>
          <td width="10"><img src="../images/service_bar_end.gif" width="10" height="22"></td>
        </tr>
      </table>
      <table width="100%" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td height="5"><img src="../images/spacer.gif" width="1" height="1"></td>
        </tr>
      </table>
      <table width="480" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td width="11"><img src="../images/service_cor01.gif" width="11" height="6"></td>
          <td background="../images/service_tbg.gif"><img src="../images/service_tbg.gif" width="7" height="6"></td>
          <td width="10"><img src="../images/service_cor02.gif" width="10" height="6"></td>
        </tr>
      </table>
      <table width="480" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td bgcolor="#74558D" width="1"><img src="../images/spacer.gif" width="1" height="1"></td>
          <td> 
            <table width="100%" border="0" cellspacing="0" cellpadding="8">
              <tr> 
                <td> 
                  <table width="100%" border="0" cellspacing="0" cellpadding="0">
                    <tr> 
                      <td align="center"><b><font size="3">ESSL简介</font></b></td>
                    </tr>
                  </table>
                  <table width="100%" border="0" cellspacing="0" cellpadding="0">
                    <tr> 
                      <td background="../images/dotline_02.gif"><img src="../images/dotline_02.gif" width="4" height="10"></td>
                    </tr>
                  </table>
                  　ESSL库(Engineering and Scientific Subroutine Library)是IBM提供的工程与科学计算优化库针对不同的RS/6000序列处理器，ESSL不同版本的子程序库，调用不同版本的ESSL的应用程序，进行编译时要用相应的编译器和编译选项。 
                  <p>　　ESSL3 提供了458个子程序，涉及以下10个领域：</p>
                  <table width="100%" border="0" cellspacing="1" cellpadding="4" bgcolor="#DADEED">
                    <tr valign="top"> 
                      <td class="td01" width="50%">（1）线性代数子程序：</td>
                      <td class="td01">（2）矩阵操作：</td>
                    </tr>
                    <tr valign="top"> 
                      <td bgcolor="#FFFFFF"> 
                        <li>向量--标量运算<br>
                        <li>稀疏向量--标量运算<br>
                        <li>矩阵--向量运算<br>
                        <li>稀疏矩阵--向量运算
                      </td>
                      <td bgcolor="#FFFFFF"> 
                        <li>矩阵加<br>
                        <li>矩阵减<br>
                        <li>矩阵乘<br>
                        <li>秩-k 修正<br>
                        <li>秩-2k修正<br>
                        <li>矩阵转置
                      </td>
                    </tr>
                    <tr valign="top"> 
                      <td class="td01">（3）线性代数方程组</td>
                      <td class="td01">（4）特征值问题</td>
                    </tr>
                    <tr valign="top"> 
                      <td bgcolor="#FFFFFF">
					    <li>稠密线性代数方程组<br>
                        <li>带状线性代数方程组 <br>
                        <li>稀疏线性代数方程组<br>
                        <li>线性最小二乘</td>
                      <td bgcolor="#FFFFFF">
					    <li>标准特征值问题<br>
                        <li>广义特征值问题</td>
                    </tr>
                    <tr valign="top"> 
                      <td bgcolor="#FFFFFF" class="td01">（5）信号处理</td>
                      <td bgcolor="#FFFFFF" class="td01">（6）排序和查找</td>
                    </tr>
                    <tr valign="top"> 
                      <td bgcolor="#FFFFFF">
					    <li>傅立叶变换<br>
                        <li>卷积与相关性<br>
                        <li>相关的计算</td>
                      <td bgcolor="#FFFFFF">
					    <li>排序和带索引排序<br>
                        <li>二分和顺序查找</td>
                    </tr>
                    <tr valign="top"> 
                      <td bgcolor="#FFFFFF" class="td01">（7）插值<b><br>
                        </b></td>
                      <td bgcolor="#FFFFFF" class="td01">（8）数值积分：</td>
                    </tr>
                    <tr valign="top"> 
                      <td bgcolor="#FFFFFF">
					    <li>多项式插值<br>
                        <li>立方样条插值</td>
                      <td bgcolor="#FFFFFF">
					    <li>关于点集或函数的数值积分</td>
                    </tr>
                    <tr valign="top"> 
                      <td bgcolor="#FFFFFF" class="td01">（9）随机数发生器</td>
                      <td bgcolor="#FFFFFF" class="td01">（10）工具：</td>
                    </tr>
                    <tr valign="top"> 
                      <td bgcolor="#FFFFFF">
					    <li>产生均匀分布的随机数<br>
                        <li>产生正态分布的随机数</td>
                      <td bgcolor="#FFFFFF">
					    <li>一般的服务操作</td>
                    </tr>
                  </table>
                  <p><b>1.Fortran程序调用ESSL</b><br>
                    <br>
                    <b>(1)调用格式</b><br>
                    <br>
                    　　ESSL子程序遵循标准Fortran的调用习惯。因此，Fortran程序调用ESSL库是非常方便的。ESSL子程序可分成两类：过程和函数。过程类子程序用CALL语句调用：<br>
                    　　CALL subroutine-name (argument-1, . . . , argument-n) </p>
                  <p><b>（2）数据类型<br>
                    <br>
                    </b>　　关于数据类型，ESSL文献使用的术语与Fortran 有所不同，但存在对应关系，如表1所示。<br>
                  </p>
                  <p>表1　ESSL与Fortran 数据类型术语对应关系</p>
                  <table width="100%" border="0" bgcolor="#DADEED" cellspacing="1" cellpadding="6">
                    <tr bgcolor="#FFFFFF"> 
                      <td width="50%">ESSL</td>
                      <td>Fortran </td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td> 
                        <p>Character item1<br>
                          &quot;N&quot;, &quot;T&quot;, &quot;C&quot;or&quot;n&quot;, 
                          &quot;t&quot;, &quot;c&quot;</p>
                      </td>
                      <td> 
                        <p>CHARACTER*1 <br>
                          &quot;N&quot;, &quot;T&quot;, &quot;C&quot;</p>
                      </td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td> 
                        <p>Logical item <br>
                          .TRUE., .FALSE.</p>
                      </td>
                      <td> 
                        <p>LOGICAL <br>
                          .TRUE., .FALSE.</p>
                      </td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td> 
                        <p>Fullword integer <br>
                          12345, -12345 </p>
                      </td>
                      <td> 
                        <p>INTEGER or INTEGER*4 <br>
                          12345, -12345</p>
                      </td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td> 
                        <p>Short-precision real number<br>
                          12.345 </p>
                      </td>
                      <td> 
                        <p>REAL or REAL*4 <br>
                          0.12345E2 </p>
                      </td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td> 
                        <p>Long-precision real number<br>
                          12.345</p>
                      </td>
                      <td> 
                        <p>DOUBLE PRECISION or REAL*8 <br>
                          0.12345D2 </p>
                      </td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td> 
                        <p>Short-precision complex number<br>
                          (123.45, -54321.0) </p>
                      </td>
                      <td> 
                        <p>COMPLEX or COMPLEX*8 <br>
                          (123.45E0, -543.21E2)</p>
                      </td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td> 
                        <p>Long-precision complex number<br>
                          (123.45, -54321.0) </p>
                      </td>
                      <td> 
                        <p>COMPLEX*16 <br>
                          (123.45D0, -543.21D2) </p>
                      </td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td colspan="2">注：ESSL 对字符型数据不区分大小写</td>
                    </tr>
                  </table>
                  <p><br>
                    <b>（3）程序编译<br>
                    <br>
                    </b>　　Fortran 程序调用不同版本的ESSL库时，必须采用相应的编译器和编译选项，如下面的表2所示。<br>
                  </p>
                  <p> 表2　Fortran 程序的编译命令<br>
                  </p>
                  <table width="100%" border="0" bgcolor="#DADEED" cellspacing="1" cellpadding="6">
                    <tr bgcolor="#FFFFFF"> 
                      <td>ESSL库名</td>
                      <td>编译命令</td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td>SMP</td>
                      <td>xlf_r -O -qnosave xyz.f -lesslsmp</td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td>Thread-Safe</td>
                      <td>xlf_r -O -qnosave xyz.f -lessl_r</td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td>POWER2</td>
                      <td>xlf -O xyz.f -lesslp2</td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td>POWER</td>
                      <td>xlf -O xyz.f -lessl</td>
                    </tr>
                  </table>
                  <p> 表中假设xyz.f 是用户的Fortran程序名<br>
                  </p>
                  <p><b>（4）多线程编程</b><br>
                  </p>
                  <p> 　　使用多线程技术，可以充分利用SMP的结构特点，获取高性能。如前所述，使用多线程编程时必须用带 -qnosave 
                    选项的编译命令xlf_r进行编译，另外由于采用了!SMP$类制导性语句，程序的编译还必须使用-qsmp选项。</p>
                  <p><b>2.C程序调用ESSL库</b><br>
                  </p>
                  <p><b>（1）调用格式 </b><br>
                  </p>
                  <p>　　对于过程类ESSL 子程序的调用，C程序采用如下语句：</p>
                  <p>　　　　subroutine-name (argument-1, . . . , argument-n);<br>
                  </p>
                  <p><b>（2）与Fortran 调用ESSL库的主要区别</b><br>
                  </p>
                  <p>　　C程序调用ESSL与Fortran程序有两点主要区别：<br>
                  </p>
                  <p>1) C程序必须包含ESSL头文件。<br>
                    　　C程序调用ESSL库时，必须包含ESSL头文件。即在源程序应有如下语句：<br>
                    　　　　# include&lt;essl.h&gt;<br>
                    　　如果使用ESSL Thread-Safe或 SMP版本，还必须有如下语句：<br>
                    　　　　# include&lt;pthread.h&gt;<br>
                  </p>
                  <p>2)数组存储模式不同。<br>
                    　　C语言中的数组按行存储，而ESSL子程序要求数组按列传递参数。用户可以采取以下任意一种措施，解决这一问题： <br>
                  </p>
                  <ul>
                    <li>从一开始就用(逻辑上的)数组的转置构造数组，若有必要，将结果转置。<br>
                    </li>
                    <li>调用ESSL之前，将矩阵转置；调用ESSL之后，再将结果矩阵转置。<br>
                    </li>
                    <li>使用ESSL子程序的矩阵转置标志&quot;t&quot;。例如，假设a，b都是n x n 矩阵，为了计算c 
                      = a b, 可以用下列方式调用ESSL子程序sgemul:<br>
                    </li>
                  </ul>
                  <p>　　　　sgemul ( a, n, &quot;t&quot;, b, n, &quot;t&quot;, c, 
                    n, n, n, n)<br>
                  </p>
                  <p><b>（3）数据类型</b><br>
                  </p>
                  <p>1）ESSL数据类型与C的对应关系<br>
                  </p>
                  <p>　　关于数据类型，ESSL文献使用的术语与C语言有所不同，但存在部分对应关系，如表3所示。<br>
                  </p>
                  <p>表3 ESSL与Fortran 数据类型术语对应关系<br>
                  </p>
                  <table width="100%" border="0" cellspacing="1" cellpadding="6" bgcolor="#DADEED">
                    <tr bgcolor="#FFFFFF"> 
                      <td>ESSL</td>
                      <td>C 语言</td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td> 
                        <p>Character item<br>
                          &quot;N&quot;, &quot;T&quot;, &quot;C&quot; or &quot;n&quot;, 
                          &quot;t&quot;, &quot;c&quot;</p>
                      </td>
                      <td> 
                        <p>char * <br>
                          &quot;n&quot;, &quot;t&quot;, &quot;c&quot; </p>
                      </td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td> 
                        <p>Logical item <br>
                          .TRUE., .FALSE.</p>
                      </td>
                      <td>无</td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td> 
                        <p>Fullword integer <br>
                          12345, -12345</p>
                      </td>
                      <td>signed int</td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td> 
                        <p>Short-precision real number<br>
                          12.345</p>
                      </td>
                      <td>float</td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td> 
                        <p>Long-precision real number<br>
                          2.345 </p>
                      </td>
                      <td>Double</td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td> 
                        <p>Short-precision complex number<br>
                          (123.45, -54321.0)</p>
                      </td>
                      <td>无</td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td> 
                        <p>Long-precision complex number<br>
                          (123.45, -54321.0)</p>
                      </td>
                      <td>无</td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td colspan="2">1 ESSL 对字符型数据不区分大小写</td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td colspan="2">2 C语言无复数和逻辑数据类型 </td>
                    </tr>
                  </table>
                  <p> <br>
                    2) C程序中使用复数和逻辑型数据<br>
                  </p>
                  <p>　　由于C语言本身不含复数和逻辑数据类型，ESSL在其头文件essl.h中为用户定义了两个数据类型：cmplx 和dcmplx. 
                    它们分别对应短精度复数类型和长精度复数类型。另外，ESSL 还定义了两个宏：RE 和RM ，分别处理复数的虚部和实部。定义代码段如下：<br>
                    　　　　#ifndef _CMPLX<br>
                    　　　　#ifndef _REIM<br>
                    　　　　#define _REIM 1<br>
                    　　　　#endif<br>
                    　　　　typedef union { struct { float __re, __im;}<br>
                    　　　　　　　　　　　　__data; double __align;} cmplx;<br>
                    　　　　#endif<br>
                    　　　　#ifndef _DCMPLX<br>
                    　　　　#ifndef _REIM<br>
                    　　　　#define _REIM 1<br>
                    　　　　#endif<br>
                    　　　　typedef union { struct { double __re, __im;}<br>
                    　　　　　　　　　　　　__data; double __align;} dcmplx;<br>
                    　　　　#endif<br>
                    　　　　#ifdef _REIM<br>
                    　　　　#define RE(x) ((x).__data.__re)<br>
                    　　　　#define IM(x) ((x).__data.__im)<br>
                    　　　　#endif<br>
                  </p>
                  <p>　　为了使用方便，用户可以定义一个CSET宏，利用RE和RM这两个宏来初始化复数（cmplex 或 dcmplex）类型的变量。举例如下：<br>
                    　　　　#include &lt;essl.h&gt;<br>
                    　　　　#define CSET(x,a,b) (RE(x)=a, IM(x)=b)<br>
                    　　　　main()<br>
                    　　　　{<br>
                    　　　　cmplx alpha,t[3],s[5];<br>
                    　　　　...<br>
                    　　　　CSET (alpha,2.0,3.0);<br>
                    　　　　caxpy (3,alpha,s,1,t,2);<br>
                    　　　　...<br>
                    　　　　}<br>
                  </p>
                  <p>　　如果用户选择使用自己定义的复数类型，则必须在程序中定义_CMPLX 和_DCMPLX.在#include&lt;essl.h&gt;语句之前，必需有如下定义：<br>
                    　　　　#define _CMPLX<br>
                    　　　　#define _DCMPLX<br>
                  </p>
                  <p>　　至于逻辑型数据，用户可作如下定义：<br>
                    　　　　#define FALSE 0<br>
                    　　　　#define TRUE 1<br>
                  </p>
                  <p>　　这样TRUE 和FALSE 就可以作为逻辑型数据传递给ESSL子程序的逻辑型参数。<br>
                  </p>
                  <p><b>（4）程序编译</b><br>
                  </p>
                  <p>　　C程序调用不同版本的ESSL库时，必须采用相应的编译器和编译选项，如下面的表4所示。<br>
                  </p>
                  <p>表4　C 程序的编译命令<br>
                  </p>
                  <table width="100%" border="0" bgcolor="#DADEED" cellspacing="1" cellpadding="6">
                    <tr bgcolor="#FFFFFF"> 
                      <td>ESSL库名</td>
                      <td>编译命令</td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td>SMP</td>
                      <td><br>
                        cc_r -O xyz.c -lesslsmp</td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td>Thread-Safe</td>
                      <td>cc_r -O xyz.c -lessl_r</td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td>POWER2</td>
                      <td>cc -O xyz.c -lesslp2</td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td>POWER</td>
                      <td>cc -O xyz.c -lessl</td>
                    </tr>
                  </table>
                  <p> 　　表中假设 xyz.c 是用户的C源程序<br>
                  </p>
                  <p>　　如果用户使用了自己定义的复数类型，则必须用编译选项 -D_CMPLX 和 -D_DCMPLX ，如表5所示。<br>
                  </p>
                  <p>表5　使用自定义复数类型的C 程序的编译命令<br>
                  </p>
                  <table width="100%" border="0" bgcolor="#DADEED" cellspacing="1" cellpadding="6">
                    <tr bgcolor="#FFFFFF"> 
                      <td bgcolor="#FFFFFF">ESSL库名</td>
                      <td bgcolor="#FFFFFF">编译命令</td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td bgcolor="#FFFFFF">SMP</td>
                      <td bgcolor="#FFFFFF"><br>
                        cc_r -O -D_CMPLX -D_DCMPLX xyz.c -lesslsmp</td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td bgcolor="#FFFFFF">Thread-Safe</td>
                      <td bgcolor="#FFFFFF">cc_r -O -D_CMPLX -D_DCMPLX xyz.c -lessl_r</td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td bgcolor="#FFFFFF">POWER2</td>
                      <td bgcolor="#FFFFFF">cc -O -D_CMPLX -D_DCMPLX xyz.c -lesslp2</td>
                    </tr>
                    <tr bgcolor="#FFFFFF"> 
                      <td bgcolor="#FFFFFF">POWER</td>
                      <td bgcolor="#FFFFFF">cc -O -D_CMPLX -D_DCMPLX xyz.c -lessl</td>
                    </tr>
                  </table>
                  <p> （<b>5）多线程编程</b><br>
                  </p>
                  <p>　　使用多线程技术，可以充分利用SMP的结构特点，获取高性能。</p>
    </td>
              </tr>
            </table>
          </td>
          <td bgcolor="#74558D" width="1"><img src="../images/spacer.gif" width="1" height="1"></td>
        </tr>
      </table>
      <table width="480" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td width="11"><img src="../images/service_cor03.gif" width="11" height="6"></td>
          <td background="../images/service_bbg.gif"><img src="../images/service_bbg.gif" width="7" height="6"></td>
          <td width="10"><img src="../images/service_cor04.gif" width="10" height="6"></td>
        </tr>
      </table>
    </td>
  </tr>
  <tr>
    <td width="163" align="center" valign="top">&nbsp;</td>
    <td width="30">&nbsp;</td>
    <td valign="top" align="right"> 
      <table width="100%" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td height="5"><img src="../images/spacer.gif" width="1" height="1"></td>
        </tr>
      </table>
      <table width="480" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td width="11"><img src="../images/service_bar_start.gif" width="11" height="22"></td>
          <td background="../images/service_bar_bg01.gif" width="100" class="padding01">&nbsp;</td>
          <td width="7" background="../images/service_bar_bg01.gif">&nbsp;</td>
          <td background="../images/service_bar_bg01.gif" align="right"> 
            <table width="100%" border="0" cellspacing="0" cellpadding="0">
              <tr> 
                <td align="center">&nbsp;</td>
                <td width="20" align="center">&nbsp;</td>
                <td class="padding01" width="70">&nbsp;</td>
                <td width="20" align="center">&nbsp;</td>
                <td class="padding01" width="70">&nbsp;</td>
                <td width="20" align="center"><img src="../images/service_bar_next.gif" width="13" height="22"></td>
                <td class="padding01" width="70"><a href="service_help4_1.htm" class="link05">下一页</a></td>
              </tr>
            </table>
          </td>
          <td width="10"><img src="../images/service_bar_end.gif" width="10" height="22"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<br>
<table width="100%" border="0" cellspacing="0" cellpadding="0">
  <tr> 
    <td bgcolor="#999999" height="1"><img src="../image/dot00.gif" width="1" height="1"></td>
  </tr>
  <tr> 
    <td align="center"> 
      <font face="Verdana, Arial, Helvetica, sans-serif" size="1">Copyright 
        for NCIC All Rights Reserved</font> <br>
        本网站版权归国家智能计算机研究开发中心所有<br>
      
    </td>
  </tr>
</table>
</body>
</html>
